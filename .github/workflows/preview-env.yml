name: Preview Environment

on:
  workflow_dispatch:
  pull_request:
    types: [opened, reopened, synchronize, closed]

jobs:
  environment:
    name: Environment name
    runs-on: ubuntu-latest

    outputs:
      name: ${{ steps.environment.outputs.name }}
      app-url: ${{ steps.app-url.outputs.url }}

    steps:
      - name: Compute environment name
        id: environment
        run: |
          branch=${{ github.head_ref }}
          environment=$(echo "$branch" | md5sum | cut -c 1-8)
          echo "name=sel-pe-$environment" >> $GITHUB_OUTPUT

      - name: App URL
        id: app-url
        run: |
          echo "url=https://${{ steps.environment.outputs.name }}-bopzor.koyeb.app" >> $GITHUB_OUTPUT

  deploy-server:
    name: Deploy server
    runs-on: ubuntu-latest
    needs: environment
    if: github.event.action != 'closed'

    concurrency:
      group: ${{ github.head_ref }}-server
      cancel-in-progress: true

    steps:
      - name: Install Koyeb CLI
        uses: koyeb-community/install-koyeb-cli@v2
        with:
          api_token: ${{ secrets.KOYEB_API_TOKEN }}

      - name: Environment variables
        id: environment-variables
        shell: bash
        run: |
          variables=(
            HOST=0.0.0.0
            PORT=3000
            SESSION_SECRET=@sel-staging-session-secret
            SESSION_SECURE=true
            APP_BASE_URL=${{ needs.environment.outputs.app-url }}
            DB_URL=@sel-staging-db-url
            EMAIL_HOST=@sel-staging-email-host
            EMAIL_PORT=465
            EMAIL_SECURE=true
            EMAIL_FROM=@sel-staging-email-from
            EMAIL_PASSWORD=@sel-staging-email-password
            SLACK_WEBHOOK_URL=@sel-staging-slack-webhook-url
            WEB_PUSH_SUBJECT=${{ needs.environment.outputs.app-url }}
            WEB_PUSH_PUBLIC_KEY=@sel-staging-web-push-public-key
            WEB_PUSH_PRIVATE_KEY=@sel-staging-web-push-private-key
          )
          IFS=, ; echo "env=${variables[*]}" >> $GITHUB_OUTPUT

      - name: Deploy server
        uses: koyeb/action-git-deploy@v1
        with:
          app-name: ${{ needs.environment.outputs.name }}
          service-name: server
          git-branch: ${{ github.head_ref }}
          git-build-command: pnpm exec tsc -b
          git-run-command: pnpm run --filter @sel/server start
          service-instance-type: micro
          service-regions: fra
          service-ports: 3000:http
          service-routes: /api:3000
          service-env: ${{ steps.environment-variables.outputs.env }}

  deploy-web:
    name: Deploy web
    runs-on: ubuntu-latest
    needs: environment
    if: github.event.action != 'closed'

    concurrency:
      group: ${{ github.head_ref }}-web
      cancel-in-progress: true

    steps:
      - name: Install Koyeb CLI
        uses: koyeb-community/install-koyeb-cli@v2
        with:
          api_token: ${{ secrets.KOYEB_API_TOKEN }}

      - name: Deploy web
        uses: koyeb/action-git-deploy@v1
        with:
          app-name: ${{ needs.environment.outputs.name }}
          service-name: web
          git-branch: ${{ github.head_ref }}
          git-build-command: pnpm exec tsc -b && pnpm run --filter @sel/web build
          git-run-command: pnpx serve -p 8080 --single apps/web/dist
          service-instance-type: nano
          service-regions: fra
          service-ports: 8080:http
          service-routes: /:8080
          service-env: VITE_API_URL=/api,VITE_GEOAPIFY_API_KEY=@sel-staging-geoapify-key,VITE_WEB_PUSH_PUBLIC_KEY=@sel-staging-web-push-public-key

  cleanup:
    name: Delete Koyeb application
    runs-on: ubuntu-latest
    needs: environment
    if: github.event.action == 'closed'

    steps:
      - name: Install Koyeb CLI
        uses: koyeb-community/install-koyeb-cli@v2
        with:
          api_token: ${{ secrets.KOYEB_API_TOKEN }}

      - name: Delete Koyeb application
        uses: koyeb/action-git-deploy/cleanup@v1
        with:
          app-name: ${{ needs.environment.outputs.name }}
